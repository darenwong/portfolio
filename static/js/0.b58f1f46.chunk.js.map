{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@react-hook/passive-layout-effect/dist/module/index.js","../node_modules/@react-hook/intersection-observer/dist/module/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/intersection-observer/intersection-observer.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","usePassiveLayoutEffect","React","document","createElement","createIntersectionObserver","root","pollInterval","useMutationObserver","rootMargin","threshold","callbacks","Set","IntersectionObserver","observer","entries","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","callback","POLL_INTERVAL","USE_MUTATION_OBSERVER","getListeners","subscribe","add","unsubscribe","delete","_intersectionObserver","Map","getIntersectionObserver","options","JSON","stringify","base","get","set","useIntersectionObserver","initialIsIntersecting","boundingClientRect","intersectionRatio","intersectionRect","isIntersecting","rootBounds","time","entry","setEntry","setObserver","useLayoutEffect","targetEl","current","didUnsubscribe","observe","unobserve","window","IntersectionObserverEntry","defineProperty","this","registry","crossOriginUpdater","crossOriginRect","THROTTLE_TIMEOUT","_setupCrossOriginUpdater","convertFromParentRect","top","bottom","left","right","width","height","forEach","_checkForIntersections","_resetCrossOriginUpdater","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","_monitorIntersections","ownerDocument","filter","_unmonitorIntersections","_unregisterInstance","disconnect","_unmonitorAllIntersections","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","sort","t","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","doc","win","defaultView","_monitoringDocuments","monitoringInterval","domObserver","setInterval","addEvent","MutationObserver","attributes","childList","characterData","subtree","_monitoringUnsubscribes","clearInterval","removeEvent","frame","getFrameElement","index","rootDoc","itemDoc","splice","unsubscribes","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","performance","now","_hasCrossedThreshold","_callback","getComputedStyle","display","parent","getParentNode","atRoot","parentRect","parentComputedStyle","frameRect","frameIntersect","body","documentElement","overflow","computeRectIntersection","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","ensureDOMRect","targetArea","intersectionArea","Number","toFixed","opt_options","fn","timeout","timer","setTimeout","throttle","bind","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","rect1","rect2","Math","max","min","el","y","x","parentBoundingRect","parentIntersectionRect","child","parentNode","host","assignedSlot","frameElement"],"mappings":"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","file":"static/js/0.b58f1f46.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nconst usePassiveLayoutEffect = React[typeof document !== 'undefined' && document.createElement !== void 0 ? 'useLayoutEffect' : 'useEffect'];\nexport default usePassiveLayoutEffect;","import 'intersection-observer';\nimport * as React from 'react';\nimport useLayoutEffect from '@react-hook/passive-layout-effect';\n\nfunction useIntersectionObserver(target, options = {}) {\n  const {\n    root = null,\n    pollInterval = null,\n    useMutationObserver = false,\n    rootMargin = '0px 0px 0px 0px',\n    threshold = 0,\n    initialIsIntersecting = false\n  } = options;\n  const [entry, setEntry] = React.useState(() => ({\n    boundingClientRect: null,\n    intersectionRatio: 0,\n    intersectionRect: null,\n    isIntersecting: initialIsIntersecting,\n    rootBounds: null,\n    target: null,\n    time: 0\n  }));\n  const [observer, setObserver] = React.useState(() => getIntersectionObserver({\n    root,\n    pollInterval,\n    useMutationObserver,\n    rootMargin,\n    threshold\n  }));\n  React.useEffect(() => {\n    const observer = getIntersectionObserver({\n      root,\n      pollInterval,\n      useMutationObserver,\n      rootMargin,\n      threshold\n    });\n    setObserver(observer); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [root, rootMargin, pollInterval, useMutationObserver, JSON.stringify(threshold)]);\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target;\n    if (!observer || !targetEl) return;\n    let didUnsubscribe = false;\n    observer.observer.observe(targetEl);\n\n    const callback = entries => {\n      if (didUnsubscribe) return;\n\n      for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry.target === targetEl) {\n          setEntry(entry);\n        }\n      }\n    };\n\n    observer.subscribe(callback);\n    return () => {\n      didUnsubscribe = true;\n      observer.observer.unobserve(targetEl);\n      observer.unsubscribe(callback);\n    };\n  }, [target, observer]);\n  return entry;\n}\n\nfunction createIntersectionObserver({\n  root = null,\n  pollInterval = null,\n  useMutationObserver = false,\n  rootMargin = '0px 0px 0px 0px',\n  threshold = 0\n}) {\n  const callbacks = new Set();\n  if (typeof IntersectionObserver === 'undefined') return null;\n  const observer = new IntersectionObserver(entries => {\n    for (const callback of callbacks) callback(entries, observer);\n  }, {\n    root,\n    rootMargin,\n    threshold\n  }); // @ts-ignore\n\n  observer.POLL_INTERVAL = pollInterval; // @ts-ignore\n\n  observer.USE_MUTATION_OBSERVER = useMutationObserver;\n  return {\n    observer,\n\n    getListeners() {\n      return callbacks;\n    },\n\n    subscribe: callback => callbacks.add(callback),\n    unsubscribe: callback => callbacks.delete(callback)\n  };\n}\n\nconst _intersectionObserver = /*#__PURE__*/new Map();\n\nfunction getIntersectionObserver(options) {\n  const {\n    root,\n    ...keys\n  } = options;\n  const key = JSON.stringify(keys);\n\n  let base = _intersectionObserver.get(root);\n\n  if (!base) {\n    base = {};\n\n    _intersectionObserver.set(root, base);\n  }\n\n  return !base[key] ? base[key] = createIntersectionObserver(options) : base[key];\n}\n\nexport default useIntersectionObserver;","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * A local reference to the document.\n */\nvar document = window.document;\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  if (doc != (this.root && this.root.ownerDocument || document)) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc = (this.root && this.root.ownerDocument || document);\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: crossOriginUpdater && !this.root ? null : rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target) &&\n    (!this.root || this.root.ownerDocument == target.ownerDocument);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n"],"sourceRoot":""}